{"version":3,"sources":["components/shared/Header.js","components/Following.js","services/GitHubService.js","components/Follower.js","components/NotFollowing.js","components/Login.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","dark","children","className","pages","length","map","item","key","to","Path","Name","Following","state","FollowingData","userID","fetch","then","res","json","setState","this","login","src","avatar_url","alt","id","href","html_url","Component","Follower","FollowerData","role","NotFollowing","Login","PageItem","Exact","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.86b20703.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = ({ dark, children, className, pages }) => {\n  dark = !!dark ? \"dark\" : \"light\";\n  return (\n    <nav\n      className={\n        `Header navbar navbar-${dark} bg-${dark}` +\n        (className ? \" \" + className : \"\") +\n        (pages && pages.length > 0 ? \" navbar-expand-lg\" : \"\")\n      }\n    >\n      <span className=\"navbar-brand\">{children}</span>\n\n      {pages && pages.length > 0 && (\n        <div className=\"collapse navbar-collapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            {pages.map((item, key) => (\n              <li className=\"nav-item\" key={key}>\n                <Link to={item.Path} className=\"nav-link\">\n                  {item.Name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { GetUserFollowing } from \"../services/GitHubService\";\n\nclass Following extends Component {\n  state = {\n    FollowingData: []\n  };\n  componentDidMount() {\n    GetUserFollowing(\"kshtj24\").then(res =>\n      this.setState({\n        FollowingData: res\n      })\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        {this.state.FollowingData.map((item, key) => (\n          <div className=\"col-sm-4 my-3\" key={key}>\n            <div className=\"card\">\n              <div className=\"card-header\">{item.login}</div>\n              <div className=\"card-body\">\n                <div className=\"card-text\">\n                  <img\n                    src={item.avatar_url}\n                    className=\"mg-thumbnail img-fluid\"\n                    alt={item.key}\n                  />\n\n                  <p>{item.id}</p>\n                  <a href={item.html_url} className=\"btn btn-primary\">\n                    View\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Following;\n","export const GetUserFollowers = userID =>\n  fetch(`https://api.github.com/users/${userID}/followers`).then(res =>\n    res.json()\n  );\n\nexport const GetUserFollowing = userID =>\n  fetch(`https://api.github.com/users/${userID}/following`).then(res =>\n    res.json()\n  );\n","import React, { Component } from \"react\";\nimport { GetUserFollowers } from \"../services/GitHubService\";\nclass Follower extends Component {\n  state = {\n    FollowerData: []\n  };\n\n  componentDidMount() {\n    GetUserFollowers(\"kshtj24\").then(res =>\n      this.setState({\n        FollowerData: res\n      })\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        {this.state.FollowerData.map((item, key) => (\n          <div className=\"col-sm-4 my-3\" key={key}>\n            <div className=\"card\">\n              <div className=\"card-header\">{item.login}</div>\n              <div className=\"card-body\">\n                <div className=\"card-text\">\n                  <img\n                    src={item.avatar_url}\n                    alt={item.key}\n                    className=\"img-thumbnail img-fluid\"\n                  />\n                  <p>{item.id}</p>\n                  <a\n                    href={item.html_url}\n                    className=\"btn btn-outline-primary\"\n                    role=\"button\"\n                  >\n                    View\n                  </a>\n                  <a\n                    href=\"followme#\"\n                    className=\"btn btn-outline-primary ml-1\"\n                    role=\"button\"\n                  >\n                    Follow\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Follower;\n","import React, { Component } from \"react\";\n\nexport default class NotFollowing extends Component {\n  render() {\n    return <div></div>;\n  }\n}\n","import React from \"react\";\n\nconst Login = () => {\n  return <div></div>;\n};\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport Header from \"./shared/Header\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Following from \"./Following\";\nimport Follower from \"./Follower\";\nimport NotFollowing from \"./NotFollowing\";\nimport Login from \"./Login\";\n\nconst pages = [\n  {\n    Name: \"Login\",\n    Path: \"/\",\n    PageItem: <Login />,\n    Exact: true\n  },\n  {\n    Name: \"Following\",\n    Path: \"/ifollow\",\n    PageItem: <Following />,\n    Exact: true\n  },\n  {\n    Name: \"Follower\",\n    Path: \"/followme\",\n    PageItem: <Follower />,\n    Exact: true\n  },\n  {\n    Name: \"Who Don't Follow\",\n    Path: \"/notfollowingback\",\n    PageItem: <NotFollowing />,\n    Exact: true\n  }\n];\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header dark={true} pages={pages}>\n          Follower Tracker\n        </Header>\n        <Switch>\n          {pages.map((item, key) => (\n            <Route path={item.Path} exact={item.Exact} key={key}>\n              <div className=\"container\">{item.PageItem}</div>\n            </Route>\n          ))}\n          <Route>\n            <h3 className=\"bg-danger\">Error 403</h3>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}